name: 'SwiftOtter Cache Action'
description: 'Composition of all caches used by SwiftOtter in one place'
inputs:
  composer:
    required: true
    default: 'true'
    description: Handle cache for Composer
  yarn:
    required: true
    default: 'true'
    description: Handle cache for Yarn
runs:
  using: "composite"
  steps:
    - name: Get Composer Cache Directory
      id: composer-cache
      if: ${{ inputs.composer == 'true' }}
      shell: bash
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v2
      if: ${{ inputs.composer == 'true' }}
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      if: ${{ inputs.yarn == 'true' }}
      shell: bash
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      if: ${{ inputs.yarn == 'true' }}
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ github.repository }}
        restore-keys: |
          ${{ runner.os }}-yarn-
